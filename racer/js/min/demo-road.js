/*! racer 28/03/2014 */
define(["lib/dom","lib/utils","lib/debugger","lib/render","lib/game","lib/stats","settings/key","settings/background","settings/sprites","settings/colors"],function(DOM,Util,Debugger,Render,Game,Stats,KEY,BACKGROUND,SPRITES,COLORS){var ROAD,accel,addBumps,addCurve,addDownhillToEnd,addHill,addLowRollingHills,addRoad,addSCurves,addSegment,addSprite,addStraight,background,breaking,camDepth,camHeight,canvas,cars,centrifugal,ctx,currentLapTime,decel,drawDistance,fieldOfView,findSegment,fogDensity,formatTime,fps,height,hillOffset,hillSpeed,hud,keyFaster,keyLeft,keyRight,keySlower,lanes,lastLapTime,lastY,maxSpeed,offRoadDecel,offRoadLimit,playerX,playerZ,position,render,reset,resetCars,resetRoad,resetSprites,resolution,roadWidth,rumbleLength,segmentLength,segments,skyOffset,skySpeed,speed,sprites,stats,step,totalCars,trackLength,treeOffset,treeSpeed,update,updateCarOffset,updateCars,updateHud,width;fps=60,step=1/fps,width=1024,height=768,centrifugal=.3,offRoadDecel=.99,skySpeed=.001,hillSpeed=.002,treeSpeed=.003,skyOffset=0,hillOffset=0,treeOffset=0,segments=[],cars=[],stats=Game.stats("fps"),canvas=DOM.get("canvas"),ctx=canvas.getContext("2d"),background=null,sprites=null,resolution=null,roadWidth=2e3,segmentLength=200,rumbleLength=3,trackLength=null,lanes=3,fieldOfView=100,camHeight=1e3,camDepth=null,drawDistance=300,playerX=0,playerZ=null,fogDensity=5,position=0,speed=0,maxSpeed=segmentLength/step,accel=maxSpeed/5,breaking=-maxSpeed,decel=-maxSpeed/5,offRoadDecel=-maxSpeed/2,offRoadLimit=maxSpeed/4,totalCars=20,currentLapTime=0,lastLapTime=null,keyLeft=!1,keyRight=!1,keyFaster=!1,keySlower=!1,hud={speed:{value:null,dom:DOM.get("speed_value")},current_lap_time:{value:null,dom:DOM.get("current_lap_time_value")},last_lap_time:{value:null,dom:DOM.get("last_lap_time_value")},fast_lap_time:{value:null,dom:DOM.get("fast_lap_time_value")}},ROAD={LENGTH:{NONE:0,SHORT:25,MEDIUM:50,LONG:100},HILL:{NONE:0,LOW:20,MEDIUM:40,HIGH:60},CURVE:{NONE:0,EASY:2,MEDIUM:4,HARD:6}},update=function(dt){var dx,nPSegment,nPSegmentCar,playerSegment,playerW,speedPercent,startPosition,_car,_carW,_sprite,_spriteW;if(playerSegment=findSegment(position+playerZ),playerW=SPRITES.PLAYER_STRAIGHT.w*SPRITES.SCALE,speedPercent=speed/maxSpeed,dx=2*dt*speedPercent,startPosition=position,updateCars(dt,playerSegment,playerW),position=Util.increase(position,dt*speed,trackLength),keyLeft?playerX-=dx:keyRight&&(playerX+=dx),playerX-=dx*speedPercent*playerSegment.curve*centrifugal,speed=keyFaster?Util.accelerate(speed,accel,dt):keySlower?Util.accelerate(speed,breaking,dt):Util.accelerate(speed,decel,dt),-1>playerX||playerX>1)for(speed>offRoadLimit&&(speed=Util.accelerate(speed,offRoadDecel,dt)),nPSegment=0;nPSegment<playerSegment.sprites.length;){if(_sprite=playerSegment.sprites[nPSegment],_spriteW=_sprite.source.w*SPRITES.SCALE,Util.overlap(playerX,playerW,_sprite.offset+_spriteW/2*(_sprite.offset>0?1:-1),_spriteW)){speed=maxSpeed/5,position=Util.increase(playerSegment.p1.world.z,-playerZ,trackLength);break}nPSegment++}for(nPSegmentCar=0;nPSegmentCar<playerSegment.cars.length;){if(_car=playerSegment.cars[nPSegmentCar],_carW=_car.sprite.w*SPRITES.SCALE,speed>_car.speed&&Util.overlap(playerX,playerW,_car.offset,_carW,.8)){speed=_car.speed*(_car.speed/speed),position=Util.increase(_car.z,-playerZ,trackLength);break}nPSegmentCar++}playerX=Util.limit(playerX,-3,3),speed=Util.limit(speed,0,maxSpeed),skyOffset=Util.increase(skyOffset,skySpeed*playerSegment.curve*(position-startPosition)/segmentLength,1),hillOffset=Util.increase(hillOffset,hillSpeed*playerSegment.curve*(position-startPosition)/segmentLength,1),treeOffset=Util.increase(treeOffset,treeSpeed*playerSegment.curve*(position-startPosition)/segmentLength,1),position>playerZ&&(currentLapTime&&playerZ>startPosition?(lastLapTime=currentLapTime,currentLapTime=0,lastLapTime<=Util.toFloat(DOM.storage.fast_lap_time)?(DOM.storage.fast_lap_time=lastLapTime,updateHud("fast_lap_time",formatTime(lastLapTime)),DOM.addClassName("fast_lap_time","fastest"),DOM.addClassName("last_lap_time","fastest")):(DOM.removeClassName("fast_lap_time","fastest"),DOM.removeClassName("last_lap_time","fastest")),updateHud("last_lap_time",formatTime(lastLapTime)),DOM.show("last_lap_time")):currentLapTime+=dt),updateHud("speed",5*Math.round(speed/5e3)),updateHud("current_lap_time",formatTime(currentLapTime))},updateCars=function(dt,playerSegment,playerW){var nCars,__car,_index,_newSegment,_oldSegment;for(nCars=0;nCars<cars.length;)__car=cars[nCars],_oldSegment=findSegment(__car.z),__car.offset=__car.offset+updateCarOffset(__car,_oldSegment,playerSegment,playerW),__car.z=Util.increase(__car.z,dt*__car.speed,trackLength),__car.percent=Util.percentRemaining(__car.z,segmentLength),_newSegment=findSegment(__car.z),_oldSegment!==_newSegment&&(_index=_oldSegment.cars.indexOf(__car),_oldSegment.cars.splice(_index,1),_newSegment.cars.push(__car)),nCars++},updateCarOffset=function(car,carSegment,playerSegment,playerW){var carW,dir,iLook,jSegCar,lookahead,otherCar,otherCarW,segment;if(lookahead=20,carW=car.sprite.w*SPRITES.SCALE,carSegment.index-playerSegment.index>drawDistance)return 0;for(iLook=0;lookahead>iLook;){if(segment=segments[(carSegment.index+iLook)%segments.length],segment===playerSegment&&car.speed>speed&&Util.overlap(playerX,playerW,car.offset,carW,1.2))return dir=playerX>.5?-1:-.5>playerX?1:car.offset>playerX?1:-1,1*dir/iLook*(car.speed-speed)/maxSpeed;for(jSegCar=0;jSegCar<segment.cars.length;){if(otherCar=segment.cars[jSegCar],otherCarW=otherCar.sprite.w*SPRITES.SCALE,car.speed>otherCar.speed&&Util.overlap(car.offset,carW,otherCar.offset,otherCarW,1.2))return dir=otherCar.offset>.5?-1:otherCar.offset<-.5?1:car.offset>otherCar.offset?1:-1,1*dir/iLook*(car.speed-otherCar.speed)/maxSpeed;jSegCar++}iLook++}return car.offset<-.9?.1:car.offset>.9?-.1:0},updateHud=function(key,value){hud[key].value!==value&&(hud[key].value=value,DOM.set(hud[key].dom,value))},formatTime=function(dt){var minutes,seconds,tenths;return minutes=Math.floor(dt/60),seconds=Math.floor(dt-60*minutes),tenths=Math.floor(10*(dt-Math.floor(dt))),minutes>0?""+minutes+"."+((10>seconds?0:"")+seconds)+"."+tenths:""+seconds+"."+tenths},render=function(){var basePercent,baseSegment,car,dx,maxy,n,nDrawDis,nSegmentCar,nSegmentSprite,playerPercent,playerSegment,playerY,segment,sprite,spriteScale,spriteX,spriteY,x;for(baseSegment=findSegment(position),basePercent=Util.percentRemaining(position,segmentLength),playerSegment=findSegment(position+playerZ),playerPercent=Util.percentRemaining(position+playerZ,segmentLength),playerY=Util.interpolate(playerSegment.p1.world.y,playerSegment.p2.world.y,playerPercent),maxy=height,x=0,dx=-(baseSegment.curve*basePercent),ctx.clearRect(0,0,width,height),Render.background(ctx,background,width,height,BACKGROUND.SKY,skyOffset,resolution*skySpeed*playerY),Render.background(ctx,background,width,height,BACKGROUND.HILLS,hillOffset,resolution*hillSpeed*playerY),Render.background(ctx,background,width,height,BACKGROUND.TREES,treeOffset,resolution*treeSpeed*playerY),n=0;drawDistance>n;)segment=segments[(baseSegment.index+n)%segments.length],segment.looped=segment.index<baseSegment.index,segment.fog=Util.exponentialFog(n/drawDistance,fogDensity),segment.clip=maxy,Util.project(segment.p1,playerX*roadWidth-x,playerY+camHeight,position-(segment.looped?trackLength:0),camDepth,width,height,roadWidth),Util.project(segment.p2,playerX*roadWidth-x-dx,playerY+camHeight,position-(segment.looped?trackLength:0),camDepth,width,height,roadWidth),x+=dx,dx+=segment.curve,n++,segment.p1.camera.z<=camDepth||segment.p2.screen.y>=segment.p1.screen.y||segment.p2.screen.y>=maxy||(Render.segment(ctx,width,lanes,segment.p1.screen.x,segment.p1.screen.y,segment.p1.screen.w,segment.p2.screen.x,segment.p2.screen.y,segment.p2.screen.w,segment.fog,segment.color),maxy=segment.p1.screen.y);for(nDrawDis=drawDistance-1;nDrawDis>0;){for(segment=segments[(baseSegment.index+nDrawDis)%segments.length],nSegmentCar=0;nSegmentCar<segment.cars.length;)car=segment.cars[nSegmentCar],sprite=car.sprite,spriteScale=Util.interpolate(segment.p1.screen.scale,segment.p2.screen.scale,car.percent),spriteX=Util.interpolate(segment.p1.screen.x,segment.p2.screen.x,car.percent)+spriteScale*car.offset*roadWidth*width/2,spriteY=Util.interpolate(segment.p1.screen.y,segment.p2.screen.y,car.percent),Render.sprite(ctx,width,height,resolution,roadWidth,sprites,car.sprite,spriteScale,spriteX,spriteY,-.5,-1,segment.clip),nSegmentCar++;for(nSegmentSprite=0;nSegmentSprite<segment.sprites.length;)sprite=segment.sprites[nSegmentSprite],spriteScale=segment.p1.screen.scale,spriteX=segment.p1.screen.x+spriteScale*sprite.offset*roadWidth*width/2,spriteY=segment.p1.screen.y,Render.sprite(ctx,width,height,resolution,roadWidth,sprites,sprite.source,spriteScale,spriteX,spriteY,sprite.offset<0?-1:0,-1,segment.clip),nSegmentSprite++;segment===playerSegment&&Render.player(ctx,width,height,resolution,roadWidth,sprites,speed/maxSpeed,camDepth/playerZ,width/2,height/2-camDepth/playerZ*Util.interpolate(playerSegment.p1.camera.y,playerSegment.p2.camera.y,playerPercent)*height/2,speed*(keyLeft?-1:keyRight?1:0),playerSegment.p2.world.y-playerSegment.p1.world.y),nDrawDis--}},lastY=function(){return 0===segments.length?0:segments[segments.length-1].p2.world.y},addSprite=function(n,sprite,offset){segments[n].sprites.push({source:sprite,offset:offset})},addSegment=function(curve,y){var n;n=segments.length,segments.push({index:n,p1:{world:{y:lastY(),z:n*segmentLength},camera:{},screen:{}},p2:{world:{y:y,z:(n+1)*segmentLength},camera:{},screen:{}},curve:curve,sprites:[],cars:[],color:Math.floor(n/rumbleLength)%2?COLORS.DARK:COLORS.LIGHT})},addRoad=function(enter,hold,leave,curve,y){var endY,nEnter,nHold,nLeave,startY,total;for(startY=lastY(),endY=startY+Util.toInt(y,0)*segmentLength,total=enter+hold+leave,nEnter=0,nHold=0,nLeave=0;enter>nEnter;)addSegment(Util.easeIn(0,curve,nEnter/enter),Util.easeInOut(startY,endY,nEnter/total)),nEnter++;for(;hold>nHold;)addSegment(curve,Util.easeInOut(startY,endY,(enter+nHold)/total)),nHold++;for(;leave>nLeave;)addSegment(Util.easeInOut(curve,0,nLeave/leave),Util.easeInOut(startY,endY,(enter+hold+nLeave)/total)),nLeave++},addStraight=function(n){var num;num=n||ROAD.LENGTH.MEDIUM,addRoad(num,num,num,0,0)},addHill=function(n,h){var num,_height;num=n||ROAD.LENGTH.MEDIUM,_height=h||ROAD.HILL.MEDIUM,addRoad(num,num,num,0,_height)},addCurve=function(n,c,h){var curve,num,_height;num=n||ROAD.LENGTH.MEDIUM,curve=c||ROAD.CURVE.MEDIUM,_height=h||ROAD.HILL.NONE,addRoad(num,num,num,curve,_height)},addLowRollingHills=function(n,h){var num,_height;num=n||ROAD.LENGTH.SHORT,_height=h||ROAD.HILL.LOW,addRoad(num,num,num,0,_height/2),addRoad(num,num,num,0,-_height),addRoad(num,num,num,ROAD.CURVE.EASY,_height),addRoad(num,num,num,0,0),addRoad(num,num,num,-ROAD.CURVE.EASY,_height/2),addRoad(num,num,num,0,0)},addSCurves=function(){addRoad(ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,-ROAD.CURVE.EASY,ROAD.HILL.NONE),addRoad(ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.CURVE.MEDIUM,ROAD.HILL.MEDIUM),addRoad(ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.CURVE.EASY,-ROAD.HILL.LOW),addRoad(ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,-ROAD.CURVE.EASY,ROAD.HILL.MEDIUM),addRoad(ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,ROAD.LENGTH.MEDIUM,-ROAD.CURVE.MEDIUM,-ROAD.HILL.MEDIUM)},addDownhillToEnd=function(n){var num;num=n||200,addRoad(num,num,num,-ROAD.CURVE.EASY,-lastY()/segmentLength)},addBumps=function(){addRoad(10,10,10,0,5),addRoad(10,10,10,0,-2),addRoad(10,10,10,0,-5),addRoad(10,10,10,0,8),addRoad(10,10,10,0,5),addRoad(10,10,10,0,-7),addRoad(10,10,10,0,5),addRoad(10,10,10,0,-2)},resetRoad=function(){var nRumble;for(segments=[],addStraight(ROAD.LENGTH.SHORT),addLowRollingHills(),addSCurves(),addCurve(ROAD.LENGTH.MEDIUM,ROAD.CURVE.MEDIUM,ROAD.HILL.LOW),addBumps(),addLowRollingHills(),addCurve(2*ROAD.LENGTH.LONG,ROAD.CURVE.MEDIUM,ROAD.HILL.MEDIUM),addStraight(),addHill(ROAD.LENGTH.MEDIUM,ROAD.HILL.HIGH),addSCurves(),addCurve(ROAD.LENGTH.LONG,-ROAD.CURVE.MEDIUM,ROAD.HILL.NONE),addHill(ROAD.LENGTH.LONG,-ROAD.HILL.HIGH),addCurve(ROAD.LENGTH.LONG,ROAD.CURVE.MEDIUM,-ROAD.HILL.LOW),addBumps(),addHill(ROAD.LENGTH.LONG,-ROAD.HILL.MEDIUM),addStraight(),addSCurves(),addDownhillToEnd(),resetSprites(),resetCars(),segments[findSegment(playerZ).index+2].color=COLORS.START,segments[findSegment(playerZ).index+3].color=COLORS.START,nRumble=0;rumbleLength>nRumble;)segments[segments.length-1-nRumble].color=COLORS.FINISH,nRumble++;trackLength=segments.length*segmentLength},findSegment=function(z){return segments[Math.floor(z/segmentLength)%segments.length]},resetSprites=function(){var interI,nFour,nOne,nThree,nTwo,offset,side,sprite;for(addSprite(20,SPRITES.BILLBOARD07,-1),addSprite(40,SPRITES.BILLBOARD06,-1),addSprite(60,SPRITES.BILLBOARD08,-1),addSprite(80,SPRITES.BILLBOARD09,-1),addSprite(100,SPRITES.BILLBOARD01,-1),addSprite(120,SPRITES.BILLBOARD02,-1),addSprite(140,SPRITES.BILLBOARD03,-1),addSprite(160,SPRITES.BILLBOARD04,-1),addSprite(180,SPRITES.BILLBOARD05,-1),addSprite(240,SPRITES.BILLBOARD07,-1.2),addSprite(240,SPRITES.BILLBOARD06,1.2),addSprite(segments.length-25,SPRITES.BILLBOARD07,-1.2),addSprite(segments.length-25,SPRITES.BILLBOARD06,1.2),nOne=10;200>nOne;)addSprite(nOne,SPRITES.PALM_TREE,.5+.5*Math.random()),addSprite(nOne,SPRITES.PALM_TREE,1+2*Math.random()),nOne+=4+Math.floor(nOne/100);for(nTwo=250;1e3>nTwo;)addSprite(nTwo,SPRITES.COLUMN,1.1),addSprite(nTwo+Util.randomInt(0,5),SPRITES.TREE1,-1-2*Math.random()),addSprite(nTwo+Util.randomInt(0,5),SPRITES.TREE2,-1-2*Math.random()),nTwo+=5;for(nThree=200;nThree<segments.length;)addSprite(nThree,Util.randomChoice(SPRITES.PLANTS,Util.randomChoice([1,-1])*(2+5*Math.random()))),nThree+=3;for(nFour=1e3;nFour<segments.length-50;){for(side=Util.randomChoice([1,-1]),addSprite(nFour+Util.randomInt(0,50),Util.randomChoice(SPRITES.BILLBOARDS),-side),interI=0;20>interI;)sprite=Util.randomChoice(SPRITES.PLANTS),offset=side*(1.5+Math.random()),addSprite(nFour+Util.randomInt(0,50),sprite,offset),interI++;nFour+=100}},resetCars=function(){var car,nCars,segment,_offset,_speed,_sprite,_z;for(cars=[],nCars=0;totalCars>nCars;)_offset=Math.random()*Util.randomChoice([-.8,.8]),_z=Math.floor(Math.random()*segments.length)*segmentLength,_sprite=Util.randomChoice(SPRITES.CARS),_speed=maxSpeed/4+Math.random()*maxSpeed/(speed===SPRITES.SEMI?4:2),car={offset:_offset,z:_z,sprite:_sprite,speed:_speed},segment=findSegment(car.z),segment.cars.push(car),cars.push(car),nCars++},Game.run({canvas:canvas,render:render,update:update,stats:stats,step:step,imgs:["background","sprites"],keys:[{keys:[KEY.LEFT,KEY.A],mode:"down",action:function(){keyLeft=!0}},{keys:[KEY.RIGHT,KEY.D],mode:"down",action:function(){keyRight=!0}},{keys:[KEY.UP,KEY.W],mode:"down",action:function(){keyFaster=!0}},{keys:[KEY.DOWN,KEY.S],mode:"down",action:function(){keySlower=!0}},{keys:[KEY.LEFT,KEY.A],mode:"up",action:function(){keyLeft=!1}},{keys:[KEY.RIGHT,KEY.D],mode:"up",action:function(){keyRight=!1}},{keys:[KEY.UP,KEY.W],mode:"up",action:function(){keyFaster=!1}},{keys:[KEY.DOWN,KEY.S],mode:"up",action:function(){keySlower=!1}}],ready:function(images){background=images[0],sprites=images[1],reset(),DOM.storage.fast_lap_time=DOM.storage.fast_lap_time||180,updateHud("fast_lap_time",formatTime(Util.toFloat(DOM.storage.fast_lap_time)))}}),reset=function(opts){var options;options=opts||{},canvas.width=width=Util.toInt(options.width,width),canvas.height=height=Util.toInt(options.height,height),lanes=Util.toInt(options.lanes,lanes),roadWidth=Util.toInt(options.roadWidth,roadWidth),camHeight=Util.toInt(options.camHeight,camHeight),drawDistance=Util.toInt(options.drawDistance,drawDistance),fogDensity=Util.toInt(options.fogDensity,fogDensity),fieldOfView=Util.toInt(options.fieldOfView,fieldOfView),segmentLength=Util.toInt(options.segmentLength,segmentLength),rumbleLength=Util.toInt(options.rumbleLength,rumbleLength),camDepth=1/Math.tan(fieldOfView/2*Math.PI/180),playerZ=camHeight*camDepth,resolution=height/480,(0===segments.length||options.segmentLength||options.rumbleLength)&&resetRoad()}});